run app in terminal:
1. create virtual env by running:

python -m venv venv
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
.\venv\Scripts\Activate.ps1
####venv\Scripts\activate.bat
pip install -r requirements.txt
python install_requirements.py

2. python app.py

run test-cases: python -m unittest test_app.py

to deactivate and remove the old env:
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
deactivate
Remove-Item -Recurse -Force .\venv

Run on Render:


git init
git add .
git config --global user.email "soniamarpreet17@gmail.com"
git commit -m "Initial commit"

Host on render

For docker:
Make a Dockerfile with commands
docker build -t thedatadecoder/titanic-image .
docker run -p 4000:80 thedatadecoder/titanic-image
Visit http://localhost:4000 to see your application in action.

docker login
docker tag apdocker11/titanic-image apdocker11/titanic_app:tag      #####dockerusername
docker push apdocker11/titanic_app:tag


install chocolatey:
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
install kubernetes-cli:
choco install kubernetes-cli

setup a Cloud cluster:
Google Cloud: Google Kubernetes Engine (GKE) Free Tier
Create a file named deployment.yaml
run: kubectl apply -f deployment.yaml
Create a file named service.yaml
run: kubectl apply -f service.yaml
get IP address: kubectl get services

