run app in terminal:
1. create virtual env by running:

python -m venv venv
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
.\venv\Scripts\Activate.ps1
####venv\Scripts\activate.bat
pip install -r requirements.txt
python install_requirements.py

2. python app.py

run test-cases: python -m unittest test_app.py

to deactivate and remove the old env:
Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
deactivate
Remove-Item -Recurse -Force .\venv

Run on Render:


git init
git add .
git config --global user.email "soniamarpreet17@gmail.com"
git commit -m "Initial commit"

Host on render

For docker:
Make a Dockerfile with commands
docker build -t thedatadecoder/titanic-image .
docker run -p 4000:80 thedatadecoder/titanic-image
Visit http://localhost:4000 to see your application in action.

docker login
docker tag apdocker11/titanic-image apdocker11/titanic_app:latest      #####dockerusername :latest = version of the app
docker push apdocker11/titanic_app:latest


install chocolatey:
pip install py-chocolatey

run in admin powershell:
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
choco install kubernetes-cli
kubectl version --client
cd ~        # If you're using cmd.exe, run: cd %USERPROFILE%
mkdir .kube
cd .kube
New-Item config -type file
Enable kubernetes from the Docker application
####az aks get-credentials --resource-group myResourceGroup --name myAKSCluster
kubectl config get-contexts
kubectl cluster-info


setup a Cloud cluster:
Google Cloud: Azure Kubernetes Engine Free Tier - portal.azure.com -  Azure Kubernetes Service (AKS)

Create a file named deployment.yaml
run: kubectl apply -f deployment.yaml

Create a file named service.yaml
run: kubectl apply -f service.yaml

get IP address: kubectl get services
"Kubernetes has allocated an external IP (localhost) and port (30485) for your titanic-service"

check pods status: kubectl get pods

Update kubernetes images with Docker:
docker tag thedatadecoder/titanic-image:latest apdocker11/titanic-image:latest
docker push apdocker11/titanic-image:latest
each time you change deployment.yaml or service.yaml, run: kubectl apply -f deployment.yaml

Check statuses:
kubectl describe service titanic-service
kubectl logs titanic-model-deployment-764555b6c7-vmn78

kubectl get endpoints titanic-service


To stop memory consumption: wsl --shutdown